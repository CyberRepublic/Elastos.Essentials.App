/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestEip7702DelegateAccount,
  TestEip7702DelegateAccountInterface,
} from "../../../contracts/test/TestEip7702DelegateAccount";

const _abi = [
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ExecuteError",
    type: "error",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BaseAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "id",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "testInit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "testInitCalled",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60808060405234601557610f66908161001a8239f35b5f80fdfe6080806040526004361015610011575b005b5f3560e01c90816301ffc9a71461099f57508063150b7a02146109135780631626ba7e1461082457806319822f7c1461061457806334fcd5be146104665780637cadf65a14610427578063b0d691fe146103db578063b5d11e9914610381578063b61d27f6146102ce578063bc197c8114610200578063d087d2881461012d5763f23a6e611461009d57005b346101295760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610129576100d4610aee565b506100dd610b11565b5060843567ffffffffffffffff8111610129576100fe903690600401610c12565b5060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b5f80fd5b34610129575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610129576040517f35567e1a0000000000000000000000000000000000000000000000000000000081523060048201525f6024820152602081604481734337084d9e255ff0702461cf8895ce9e3b5ff1085afa80156101f5575f906101c2575b602090604051908152f35b506020813d6020116101ed575b816101dc60209383610b34565b8101031261012957602090516101b7565b3d91506101cf565b6040513d5f823e3d90fd5b346101295760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012957610237610aee565b50610240610b11565b5060443567ffffffffffffffff811161012957610261903690600401610c30565b5060643567ffffffffffffffff811161012957610282903690600401610c30565b5060843567ffffffffffffffff8111610129576102a3903690600401610c12565b5060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b346101295760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012957610305610aee565b60443567ffffffffffffffff8111610129573660238201121561012957806004013567ffffffffffffffff8111610129573660248284010111610129575f9261035d8493610351610ce9565b5a936024369201610bdc565b916020835193019160243591f11561037157005b610379610d75565b602081519101fd5b34610129575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610129575f80547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055005b34610129575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610129576020604051734337084d9e255ff0702461cf8895ce9e3b5ff1088152f35b34610129575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012957602060ff5f54166040519015158152f35b346101295760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101295760043567ffffffffffffffff8111610129573660238201121561012957806004013567ffffffffffffffff8111610129573660248260051b84010111610129576104dd610ce9565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7d83360301905b8281101561000f5760248160051b850101358281121561012957840160248101803573ffffffffffffffffffffffffffffffffffffffff8116810361012957826105646105595f9594606487960190610c98565b91905a923691610bdc565b92604460208551950193013591f11561057f57600101610505565b6001830361058f57610379610d75565b6064610599610d75565b917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f60206040519586947f5a1546750000000000000000000000000000000000000000000000000000000086526004860152604060248601528051918291826044880152018686015e5f85828601015201168101030190fd5b346101295760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101295760043567ffffffffffffffff811161012957806004016101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc83360301126101295760443590734337084d9e255ff0702461cf8895ce9e3b5ff10833036107c65760146106b46044850183610c98565b90501161075f575b6106e56106dd6106d66106ee936101046020970190610c98565b3691610bdc565b602435610d8f565b90929192610dc9565b73ffffffffffffffffffffffffffffffffffffffff163003610757575f905b8061071c575b50604051908152f35b5f80808093335af1503d15610752573d61073581610ba2565b906107436040519283610b34565b81525f833d92013e5b82610713565b61074c565b60019061070d565b60ff5f54166106bc5760646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f74657374496e6974206e6f742063616c6c6564000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b346101295760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101295760243567ffffffffffffffff8111610129576106e5610879610881923690600401610c12565b600435610d8f565b73ffffffffffffffffffffffffffffffffffffffff1630036108eb5760207f1626ba7e000000000000000000000000000000000000000000000000000000005b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b60207fffffffff000000000000000000000000000000000000000000000000000000006108c1565b346101295760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101295761094a610aee565b50610953610b11565b5060643567ffffffffffffffff811161012957610974903690600401610c12565b5060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b346101295760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261012957600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361012957817f01ffc9a70000000000000000000000000000000000000000000000000000000060209314908115610ac4575b8115610a9a575b8115610a70575b8115610a46575b5015158152f35b7f150b7a020000000000000000000000000000000000000000000000000000000091501483610a3f565b7f4e2312e00000000000000000000000000000000000000000000000000000000081149150610a38565b7f1626ba7e0000000000000000000000000000000000000000000000000000000081149150610a31565b7f19822f7c0000000000000000000000000000000000000000000000000000000081149150610a2a565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361012957565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361012957565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610b7557604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff8111610b7557601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192610be882610ba2565b91610bf66040519384610b34565b829481845281830111610129578281602093845f960137010152565b9080601f8301121561012957816020610c2d93359101610bdc565b90565b9080601f830112156101295781359167ffffffffffffffff8311610b75578260051b9060405193610c646020840186610b34565b845260208085019282010192831161012957602001905b828210610c885750505090565b8135815260209182019101610c7b565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610129570180359067ffffffffffffffff82116101295760200191813603831361012957565b3033148015610d58575b15610cfa57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f6e6f742066726f6d2073656c66206f7220456e747279506f696e7400000000006044820152fd5b50734337084d9e255ff0702461cf8895ce9e3b5ff1083314610cf3565b3d604051906020818301016040528082525f602083013e90565b8151919060418303610dbf57610db89250602082015190606060408401519301515f1a90610ea1565b9192909190565b50505f9160029190565b6004811015610e745780610ddb575050565b60018103610e0b577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103610e3f57507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314610e495750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411610f25579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa156101f5575f5173ffffffffffffffffffffffffffffffffffffffff811615610f1b57905f905f90565b505f906001905f90565b5050505f916003919056fea26469706673582212207f44db4dd4cf2940efb65f0e2c0ad69d6a580d1be402516dcc8a97a1ab6d590364736f6c634300081c0033";

type TestEip7702DelegateAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestEip7702DelegateAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestEip7702DelegateAccount__factory extends ContractFactory {
  constructor(...args: TestEip7702DelegateAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestEip7702DelegateAccount> {
    return super.deploy(overrides || {}) as Promise<TestEip7702DelegateAccount>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestEip7702DelegateAccount {
    return super.attach(address) as TestEip7702DelegateAccount;
  }
  override connect(signer: Signer): TestEip7702DelegateAccount__factory {
    return super.connect(signer) as TestEip7702DelegateAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestEip7702DelegateAccountInterface {
    return new utils.Interface(_abi) as TestEip7702DelegateAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestEip7702DelegateAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestEip7702DelegateAccount;
  }
}
