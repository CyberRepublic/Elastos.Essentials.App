/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestWrappedNativeToken,
  TestWrappedNativeTokenInterface,
} from "../../../contracts/test/TestWrappedNativeToken";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523461032857604080519081016001600160401b0381118282101761023b576040908152601482527f57726170706564204e617469766520546f6b656e000000000000000000000000602083015280519081016001600160401b0381118282101761023b576040526005815264776e546f6b60d81b602082015281516001600160401b03811161023b57600354600181811c9116801561031e575b602082101461021d57601f81116102bb575b50602092601f821160011461025a57928192935f9261024f575b50508160011b915f199060031b1c1916176003555b80516001600160401b03811161023b57600454600181811c91168015610231575b602082101461021d57601f81116101ba575b50602091601f821160011461015a579181925f9261014f575b50508160011b915f199060031b1c1916176004555b604051610b5f908161032d8239f35b015190505f8061012b565b601f1982169260045f52805f20915f5b8581106101a25750836001951061018a575b505050811b01600455610140565b01515f1960f88460031b161c191690555f808061017c565b9192602060018192868501518155019401920161016a565b60045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f830160051c81019160208410610213575b601f0160051c01905b8181106102085750610112565b5f81556001016101fb565b90915081906101f2565b634e487b7160e01b5f52602260045260245ffd5b90607f1690610100565b634e487b7160e01b5f52604160045260245ffd5b015190505f806100ca565b601f1982169360035f52805f20915f5b8681106102a3575083600195961061028b575b505050811b016003556100df565b01515f1960f88460031b161c191690555f808061027d565b9192602060018192868501518155019401920161026a565b60035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f830160051c81019160208410610314575b601f0160051c01905b81811061030957506100b0565b5f81556001016102fc565b90915081906102f3565b90607f169061009e565b5f80fdfe6080806040526004361015610024575b50361561001a575f80fd5b6100226109b0565b005b5f3560e01c90816306fdde031461080b57508063095ea7b31461075e57806318160ddd1461072357806323b872dd1461058f5780632e1a7d4d146103ad578063313ce5671461037457806370a082311461031257806395d89b41146101b9578063a9059cbb1461016a578063d0e30db0146101395763dd62ed3e146100a9575f61000f565b346101355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576100e0610929565b73ffffffffffffffffffffffffffffffffffffffff6100fd61094c565b91165f52600160205273ffffffffffffffffffffffffffffffffffffffff60405f2091165f52602052602060405f2054604051908152f35b5f80fd5b5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576100226109b0565b346101355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576101ae6101a4610929565b6024359033610a5f565b602060405160018152f35b34610135575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576040515f6004548060011c90600181168015610308575b6020831081146102db57828552908115610299575060011461023b575b6102378361022b8185038261096f565b604051918291826108e1565b0390f35b91905060045f527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b915f905b80821061027f5750909150810160200161022b61021b565b919260018160209254838588010152019101909291610267565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660208086019190915291151560051b8401909101915061022b905061021b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b91607f16916101fe565b346101355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101355773ffffffffffffffffffffffffffffffffffffffff61035e610929565b165f525f602052602060405f2054604051908152f35b34610135575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013557602060405160128152f35b346101355760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013557600435331561056357335f525f60205260405f2054818110610531575f808381948294338452836020520360408320558060025403600255816040518281527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a3335af13d1561052c573d67ffffffffffffffff81116104ff576040519061049060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116018361096f565b81525f60203d92013e5b156104a157005b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f7472616e73666572206661696c656400000000000000000000000000000000006044820152fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61049a565b7fe450d38c000000000000000000000000000000000000000000000000000000005f523360045260245260445260645ffd5b7f96c6fd1e000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b346101355760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576105c6610929565b6105ce61094c565b6044359073ffffffffffffffffffffffffffffffffffffffff831692835f52600160205260405f2073ffffffffffffffffffffffffffffffffffffffff33165f5260205260405f20547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff810361064a575b506101ae9350610a5f565b8381106106ef5784156106c3573315610697576101ae945f52600160205260405f2073ffffffffffffffffffffffffffffffffffffffff33165f526020528360405f20910390558461063f565b7f94280d62000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b7fe602df05000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b83907ffb8f41b2000000000000000000000000000000000000000000000000000000005f523360045260245260445260645ffd5b34610135575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135576020600254604051908152f35b346101355760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261013557610795610929565b6024359033156106c35773ffffffffffffffffffffffffffffffffffffffff1690811561069757335f52600160205260405f20825f526020528060405f20556040519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560203392a3602060405160018152f35b34610135575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610135575f6003548060011c906001811680156108d7575b6020831081146102db578285529081156102995750600114610879576102378361022b8185038261096f565b91905060035f527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b915f905b8082106108bd5750909150810160200161022b61021b565b9192600181602092548385880101520191019092916108a5565b91607f169161084d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602060409481855280519182918282880152018686015e5f8582860101520116010190565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361013557565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361013557565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176104ff57604052565b3315610a3357600254348101809111610a0657600255335f525f60205260405f203481540190556040513481525f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203393a3565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b7fec442f05000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b73ffffffffffffffffffffffffffffffffffffffff169081156105635773ffffffffffffffffffffffffffffffffffffffff16918215610a3357815f525f60205260405f2054818110610af757817fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92602092855f525f84520360405f2055845f525f825260405f20818154019055604051908152a3565b827fe450d38c000000000000000000000000000000000000000000000000000000005f5260045260245260445260645ffdfea2646970667358221220230e248c255aa35fc5178ea40428a02c5182e114be3e3fa12a23e6872fe32f6d64736f6c634300081c0033";

type TestWrappedNativeTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestWrappedNativeTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestWrappedNativeToken__factory extends ContractFactory {
  constructor(...args: TestWrappedNativeTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestWrappedNativeToken> {
    return super.deploy(overrides || {}) as Promise<TestWrappedNativeToken>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): TestWrappedNativeToken {
    return super.attach(address) as TestWrappedNativeToken;
  }
  override connect(signer: Signer): TestWrappedNativeToken__factory {
    return super.connect(signer) as TestWrappedNativeToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestWrappedNativeTokenInterface {
    return new utils.Interface(_abi) as TestWrappedNativeTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestWrappedNativeToken {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestWrappedNativeToken;
  }
}
