/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestAggregatedAccount,
  TestAggregatedAccountInterface,
} from "../../../contracts/test/TestAggregatedAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "anAggregator",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ExecuteError",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "aggregator",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BaseAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60e03461017157601f61193038819003918201601f19168301916001600160401b03831184841017610175578084926040948552833981010312610171578051906001600160a01b03821682036101715760200151906001600160a01b0382168203610171573060805260a0525f5160206119105f395f51905f525460ff8160401c16610162576002600160401b03196001600160401b0382160161010c575b5060c052604051611786908161018a82396080518181816108b501526109a9015260a0518181816101fb01528181610398015281816105870152818161077701528181610ce601528181610dbb015281816110c90152611560015260c05181818161101d015261112a0152f35b6001600160401b0319166001600160401b039081175f5160206119105f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f61009f565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f905f3560e01c90816301ffc9a71461129457508063150b7a021461120757806319822f7c14611041578063245a7bfc14610fd357806334fcd5be14610e3f5780634a58db1914610d7a5780634d44560d14610c755780634f1ef2861461092d57806352d1902d1461086f5780638da5cb5b1461081e578063ad3cb1cc1461079b578063b0d691fe1461072c578063b61d27f614610692578063bc197c81146105c0578063c399ec881461050e578063c4d66de814610278578063d087d2881461017c5763f23a6e610361000f57346101795760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957610121611381565b5061012a6113a4565b5060843567ffffffffffffffff81116101775761014b9036906004016113c7565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b505b80fd5b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957604051907f35567e1a00000000000000000000000000000000000000000000000000000000825230600483015280602483015260208260448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561026c5790610235575b602090604051908152f35b506020813d602011610264575b8161024f60209383611426565b81010312610260576020905161022a565b5f80fd5b3d9150610242565b604051903d90823e3d90fd5b50346101795760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610179576102b0611381565b507ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005460ff8160401c16159067ffffffffffffffff811680159081610506575b60011490816104fc575b1590816104f3575b506104cb578160017fffffffffffffffffffffffffffffffffffffffffffffffff00000000000000008316177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055610476575b507fffffffffffffffffffffffff00000000000000000000000000000000000000008254168255604051908273ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8280a36103e4575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2917fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005560018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00555f610355565b6004837ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f610302565b303b1591506102fa565b8391506102f0565b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957604051907f70a0823100000000000000000000000000000000000000000000000000000000825230600483015260208260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561026c579061023557602090604051908152f35b50346101795760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610179576105f8611381565b506106016113a4565b5060443567ffffffffffffffff8111610177576106229036906004016113f5565b505060643567ffffffffffffffff8111610177576106449036906004016113f5565b505060843567ffffffffffffffff8111610177576106669036906004016113c7565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b50346101795760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957806106cb611381565b60443567ffffffffffffffff81116107285782916106f06107039236906004016113c7565b92906106fa611549565b5a9336916114a1565b916020835193019160243591f1156107185780f35b61072061160e565b602081519101fd5b5050fd5b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610179575061081a6040516107dc604082611426565b600581527f352e302e3000000000000000000000000000000000000000000000000000000060208201526040519182916020835260208301906114d7565b0390f35b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795773ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001630036109055760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b807fe07c8dba0000000000000000000000000000000000000000000000000000000060049252fd5b5060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957610960611381565b9060243567ffffffffffffffff81116101775736602382011215610177576109929036906024816004013591016114a1565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610c33575b50610c0b576109e1611628565b73ffffffffffffffffffffffffffffffffffffffff831690604051937f52d1902d000000000000000000000000000000000000000000000000000000008552602085600481865afa80958596610bd3575b50610a6357602484847f4c9c8ce3000000000000000000000000000000000000000000000000000000008252600452fd5b9091847f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8103610ba85750813b15610b7d57807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151839015610b4a5780836020610b4695519101845af4610b4061151a565b916116b7565b5080f35b50505034610b555780f35b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000008452600452602483fd5b7faa1d49a4000000000000000000000000000000000000000000000000000000008552600452602484fd5b9095506020813d602011610c03575b81610bef60209383611426565b81010312610bff5751945f610a32565b8480fd5b3d9150610be2565b6004827fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614155f6109d4565b50346101795760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610179578060043573ffffffffffffffffffffffffffffffffffffffff8116809103610d7757610ccf611628565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156107285782916044839260405194859384927f205c2878000000000000000000000000000000000000000000000000000000008452600484015260243560248401525af18015610d6c57610d5b5750f35b81610d6591611426565b6101795780f35b6040513d84823e3d90fd5b50fd5b505f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b15610260575f602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af18015610e3457610e28575080f35b61001a91505f90611426565b6040513d5f823e3d90fd5b346102605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605760043567ffffffffffffffff811161026057610e8e9036906004016113f5565b610e96611549565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301905b8281101561001a578060051b8401358281121561026057840180359073ffffffffffffffffffffffffffffffffffffffff821682036102605760408101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1823603018112156102605781019182359267ffffffffffffffff841161026057602001918336038313610260575f93610f5a85945a9236916114a1565b926020808551950193013591f115610f7457600101610ebe565b60018303610f845761072061160e565b610f8c61160e565b90610fcf6040519283927f5a15467500000000000000000000000000000000000000000000000000000000845260048401526040602484015260448301906114d7565b0390fd5b34610260575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026057602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346102605760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605760043567ffffffffffffffff8111610260577ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc61012091360301126102605760443573ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036111a957604051606081019181831067ffffffffffffffff84111761117c576020926040525f604073ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016938481528286820152015280611164575b50604051908152f35b5f80808093335af15061117561151a565b508261115b565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b346102605760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605761123e611381565b506112476113a4565b5060643567ffffffffffffffff8111610260576112689036906004016113c7565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b346102605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026057600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361026057817f150b7a020000000000000000000000000000000000000000000000000000000060209314908115611357575b811561132d575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611326565b7f4e2312e0000000000000000000000000000000000000000000000000000000008114915061131f565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361026057565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361026057565b9181601f840112156102605782359167ffffffffffffffff8311610260576020838186019501011161026057565b9181601f840112156102605782359167ffffffffffffffff8311610260576020808501948460051b01011161026057565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761117c57604052565b67ffffffffffffffff811161117c57601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9291926114ad82611467565b916114bb6040519384611426565b829481845281830111610260578281602093845f960137010152565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b3d15611544573d9061152b82611467565b916115396040519384611426565b82523d5f602084013e565b606090565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016331480156115ee575b1561159057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b5073ffffffffffffffffffffffffffffffffffffffff5f54163314611589565b3d604051906020818301016040528082525f602083013e90565b73ffffffffffffffffffffffffffffffffffffffff5f5416331480156116ae575b1561165057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b50303314611649565b906116f457508051156116cc57805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b81511580611747575b611705575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b156116fd56fea2646970667358221220e546e8cd27885e378c690ac3527edea841edc394ff196f61c9b1b25e7d5a1f7764736f6c634300081c0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type TestAggregatedAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestAggregatedAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestAggregatedAccount__factory extends ContractFactory {
  constructor(...args: TestAggregatedAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestAggregatedAccount> {
    return super.deploy(
      anEntryPoint,
      anAggregator,
      overrides || {}
    ) as Promise<TestAggregatedAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    anAggregator: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      anEntryPoint,
      anAggregator,
      overrides || {}
    );
  }
  override attach(address: string): TestAggregatedAccount {
    return super.attach(address) as TestAggregatedAccount;
  }
  override connect(signer: Signer): TestAggregatedAccount__factory {
    return super.connect(signer) as TestAggregatedAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestAggregatedAccountInterface {
    return new utils.Interface(_abi) as TestAggregatedAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestAggregatedAccount {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestAggregatedAccount;
  }
}
