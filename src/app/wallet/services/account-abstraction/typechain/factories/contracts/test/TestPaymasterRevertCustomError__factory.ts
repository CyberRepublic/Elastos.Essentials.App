/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  TestPaymasterRevertCustomError,
  TestPaymasterRevertCustomErrorInterface,
} from "../../../contracts/test/TestPaymasterRevertCustomError";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "_entryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "customReason",
        type: "string",
      },
    ],
    name: "CustomError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferStarted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "unstakeDelaySec",
        type: "uint32",
      },
    ],
    name: "addStake",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "deposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum IPaymaster.PostOpMode",
        name: "mode",
        type: "uint8",
      },
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "actualGasCost",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "actualUserOpFeePerGas",
        type: "uint256",
      },
    ],
    name: "postOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum TestPaymasterRevertCustomError.RevertType",
        name: "_revertType",
        type: "uint8",
      },
    ],
    name: "setRevertType",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unlockStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "maxCost",
        type: "uint256",
      },
    ],
    name: "validatePaymasterUserOp",
    outputs: [
      {
        internalType: "bytes",
        name: "context",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0806040523461018a57602081611052803803809161001f82856101b4565b83398101031261018a57516001600160a01b03811680820361018a5733156101a15760018060a01b03196001541660015560205f543360018060a01b03198216175f55602460405180948193339060018060a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a36301ffc9a760e01b8252631313998b60e31b60048301525afa908115610196575f91610157575b501561011257608052604051610e6690816101ec823960805181818161015f0152818161026001528181610784015281816107f6015281816108b7015281816109b101528181610a600152610daa0152f35b60405162461bcd60e51b815260206004820152601e60248201527f49456e747279506f696e7420696e74657266616365206d69736d6174636800006044820152606490fd5b90506020813d60201161018e575b81610172602093836101b4565b8101031261018a5751801515810361018a575f6100c0565b5f80fd5b3d9150610165565b6040513d5f823e3d90fd5b631e4fbdf760e01b5f525f60045260245ffd5b601f909101601f19168101906001600160401b038211908210176101d757604052565b634e487b7160e01b5f52604160045260245ffdfe60806040526004361015610011575f80fd5b5f3560e01c80630396cb6014610104578063205c2878146100ff5780632cd10339146100fa57806352b7512c146100f5578063715018a6146100f057806379ba5097146100eb5780637c627b21146100e65780638da5cb5b146100e1578063b0d691fe146100dc578063bb9fe6bf146100d7578063c23a5cea146100d2578063c399ec88146100cd578063d0e30db0146100c8578063e30c3978146100c35763f2fde38b146100be575f80fd5b610b1e565b610acd565b610a1f565b61093a565b61085c565b6107a8565b61073a565b6106ea565b61065c565b610554565b610492565b6103be565b6102e9565b610201565b5f60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5760043563ffffffff81168091036101df57610148610d73565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156101df575f906024604051809481937f0396cb60000000000000000000000000000000000000000000000000000000008352600483015234905af180156101da576101cc575080f35b6101d891505f90610bdf565b005b610c4d565b5f80fd5b73ffffffffffffffffffffffffffffffffffffffff8116036101df57565b346101df575f60407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5760043561023d816101e3565b60243590610249610d73565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156101df57604473ffffffffffffffffffffffffffffffffffffffff915f809460405196879586947f205c287800000000000000000000000000000000000000000000000000000000865216600485015260248401525af180156101da576101cc575080f35b346101df5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5760043560028110156101df577fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff74ff00000000000000000000000000000000000000006001549260a01b169116176001555f80f35b9190602060607fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f835f956040895280519182918260408c015201858a015e8584828a0101520116850101930152565b346101df5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5760043567ffffffffffffffff81116101df576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82360301126101df5761048e90610438610d93565b60040135610445816101e3565b7fffffffffffffffffffffffffffffffffffffffff0000000000000000000000006040519160601b16602082015260148152610482603482610bdf565b6040519182918261036d565b0390f35b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df576104c8610d73565b7fffffffffffffffffffffffff0000000000000000000000000000000000000000600154166001555f73ffffffffffffffffffffffffffffffffffffffff81547fffffffffffffffffffffffff000000000000000000000000000000000000000081168355167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df573373ffffffffffffffffffffffffffffffffffffffff6001541603610630577fffffffffffffffffffffffff0000000000000000000000000000000000000000600154166001555f54337fffffffffffffffffffffffff00000000000000000000000000000000000000008216175f5573ffffffffffffffffffffffffffffffffffffffff3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e05f80a3005b7f118cdaa7000000000000000000000000000000000000000000000000000000005f523360045260245ffd5b346101df5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5760043560038110156101df5760243567ffffffffffffffff81116101df57366023820112156101df5780600401359167ffffffffffffffff83116101df5736602484840101116101df576101d892604435916024606435940190610c8f565b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df57602073ffffffffffffffffffffffffffffffffffffffff5f5416604051908152f35b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df57602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b346101df575f5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df576107df610d73565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b156101df575f80916004604051809481937fbb9fe6bf0000000000000000000000000000000000000000000000000000000083525af180156101da576101cc575080f35b346101df575f60207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df57600435610898816101e3565b6108a0610d73565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156101df5773ffffffffffffffffffffffffffffffffffffffff60245f928360405195869485937fc23a5cea0000000000000000000000000000000000000000000000000000000085521660048401525af180156101da576101cc575080f35b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df576040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260208160248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa80156101da575f906109eb575b604051908152602090f35b506020813d602011610a17575b81610a0560209383610bdf565b810103126101df5761048e90516109e0565b3d91506109f8565b5f5f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b156101df575f602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af180156101da576101cc575080f35b346101df575f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df57602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346101df5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101df5773ffffffffffffffffffffffffffffffffffffffff600435610b6e816101e3565b610b76610d73565b16807fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015573ffffffffffffffffffffffffffffffffffffffff5f54167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e227005f80a3005b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610c2057604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6040513d5f823e3d90fd5b60021115610c6257565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b5050505050610c9c610d93565b60ff60015460a01c16610cae81610c58565b80610d38576040517f8d6ea8be00000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f746869732069732061206c6f6e672072657665727420726561736f6e2073747260448201527f696e6720776520617265206c6f6f6b696e6720666f72000000000000000000006064820152608490fd5b600190610d4481610c58565b14610d4b57565b7fdeaddead000000000000000000000000000000000000000000000000000000005f5260205ffd5b73ffffffffffffffffffffffffffffffffffffffff5f5416330361063057565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163303610dd257565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f53656e646572206e6f7420456e747279506f696e7400000000000000000000006044820152fdfea2646970667358221220980e692dc15c0a851e0ad36afe80b9d3578dffd1705175c4b37413238513abd764736f6c634300081c0033";

type TestPaymasterRevertCustomErrorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestPaymasterRevertCustomErrorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestPaymasterRevertCustomError__factory extends ContractFactory {
  constructor(...args: TestPaymasterRevertCustomErrorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestPaymasterRevertCustomError> {
    return super.deploy(
      _entryPoint,
      overrides || {}
    ) as Promise<TestPaymasterRevertCustomError>;
  }
  override getDeployTransaction(
    _entryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_entryPoint, overrides || {});
  }
  override attach(address: string): TestPaymasterRevertCustomError {
    return super.attach(address) as TestPaymasterRevertCustomError;
  }
  override connect(signer: Signer): TestPaymasterRevertCustomError__factory {
    return super.connect(signer) as TestPaymasterRevertCustomError__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestPaymasterRevertCustomErrorInterface {
    return new utils.Interface(_abi) as TestPaymasterRevertCustomErrorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestPaymasterRevertCustomError {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as TestPaymasterRevertCustomError;
  }
}
