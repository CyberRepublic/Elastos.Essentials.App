/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  TestExecAccount,
  TestExecAccountInterface,
} from "../../../../contracts/test/TestExecAccount.sol/TestExecAccount";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IEntryPoint",
        name: "anEntryPoint",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [],
    name: "ECDSAInvalidSignature",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
    ],
    name: "ECDSAInvalidSignatureLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "ECDSAInvalidSignatureS",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "ERC1967InvalidImplementation",
    type: "error",
  },
  {
    inputs: [],
    name: "ERC1967NonPayable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "error",
        type: "bytes",
      },
    ],
    name: "ExecuteError",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [],
    name: "UUPSUnauthorizedCallContext",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "slot",
        type: "bytes32",
      },
    ],
    name: "UUPSUnsupportedProxiableUUID",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "innerCallRet",
        type: "bytes",
      },
    ],
    name: "Executed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IEntryPoint",
        name: "entryPoint",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "SimpleAccountInitialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    inputs: [],
    name: "UPGRADE_INTERFACE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addDeposit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct BaseAccount.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "executeBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "executeUserOp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getDeposit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "anOwner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "withdrawAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdrawDepositTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60c03461014757601f611e5638819003918201601f19168301916001600160401b0383118484101761014b5780849260209460405283398101031261014757516001600160a01b0381168103610147573060805260a0525f516020611e365f395f51905f525460ff8160401c16610138576002600160401b03196001600160401b038216016100e2575b604051611cd690816101608239608051818181610c0f0152610cf2015260a0518181816101fb015281816103b2015281816105a10152818161079101528181611012015281816110f901528181611355015261190f0152f35b6001600160401b0319166001600160401b039081175f516020611e365f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610089565b63f92ee8a960e01b5f5260045ffd5b5f80fd5b634e487b7160e01b5f52604160045260245ffdfe608080604052600436101561001c575b50361561001a575f80fd5b005b5f905f3560e01c90816301ffc9a7146114a057508063150b7a021461141357806319822f7c146112cd57806334fcd5be1461117d5780634a58db19146110b85780634d44560d14610fba5780634f1ef28614610c8757806352d1902d14610bc95780638da5cb5b14610b785780638dd7712f14610838578063ad3cb1cc146107b5578063b0d691fe14610746578063b61d27f6146106ac578063bc197c81146105da578063c399ec8814610528578063c4d66de814610278578063d087d2881461017c5763f23a6e610361000f57346101795760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795761012161158d565b5061012a6115b0565b5060843567ffffffffffffffff81116101775761014b9036906004016115f4565b505060206040517ff23a6e61000000000000000000000000000000000000000000000000000000008152f35b505b80fd5b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957604051907f35567e1a00000000000000000000000000000000000000000000000000000000825230600483015280602483015260208260448173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561026c5790610235575b602090604051908152f35b506020813d602011610264575b8161024f60209383611653565b81010312610260576020905161022a565b5f80fd5b3d9150610242565b604051903d90823e3d90fd5b50346101795760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610179576102b061158d565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00549060ff8260401c16159167ffffffffffffffff811680159081610520575b6001149081610516575b15908161050d575b506104e55790818360017fffffffffffffffffffffffffffffffffffffffffffffffff000000000000000073ffffffffffffffffffffffffffffffffffffffff9516177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0055610490575b501690817fffffffffffffffffffffffff00000000000000000000000000000000000000008454161783556040519173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000167f47e55c76e7a6f1fd8996a1da8008c1ea29699cca35e7bcd057f2dec313b6e5de8580a36103fe575080f35b60207fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2917fffffffffffffffffffffffffffffffffffffffffffffff00ffffffffffffffff7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054167ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005560018152a180f35b7fffffffffffffffffffffffffffffffffffffffffffffff0000000000000000001668010000000000000001177ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00555f61036c565b6004847ff92ee8a9000000000000000000000000000000000000000000000000000000008152fd5b9050155f610302565b303b1591506102fa565b8491506102f0565b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957604051907f70a0823100000000000000000000000000000000000000000000000000000000825230600483015260208260248173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165afa90811561026c579061023557602090604051908152f35b50346101795760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795761061261158d565b5061061b6115b0565b5060443567ffffffffffffffff81116101775761063c903690600401611622565b505060643567ffffffffffffffff81116101775761065e903690600401611622565b505060843567ffffffffffffffff8111610177576106809036906004016115f4565b505060206040517fbc197c81000000000000000000000000000000000000000000000000000000008152f35b50346101795760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957806106e561158d565b60443567ffffffffffffffff811161074257829161070a61071d9236906004016115f4565b92906107146118f8565b5a9336916116fb565b916020835193019160243591f1156107325780f35b61073a6119bd565b602081519101fd5b5050fd5b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957602060405173ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000168152f35b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957506108346040516107f6604082611653565b600581527f352e302e30000000000000000000000000000000000000000000000000000000602082015260405191829160208352602083019061174f565b0390f35b50346101795760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795760043567ffffffffffffffff811161017757806004016101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8336030112610b74576108b36118f8565b8260648301916108c38382611792565b929083600411610177576060937ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8101610a72575b827fd3fddfd1276d1cc278f10907710a44474a32f917b2fcfa198f46ca7689215e2f6109c888610a6c89610a5e8d610a2d8c610104610a25604051998a9960408b5273ffffffffffffffffffffffffffffffffffffffff610958866115d3565b1660408c0152602487013560608c01526109986109918c61016061097f60448c018a611812565b91909261012060808201520191611862565b9186611812565b8c83037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00160a08e015290611862565b608486013560c08b015260a486013560e08b015260c48601356101008b01526109f460e4870185611812565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08c8403016101208d0152611862565b930190611812565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc087840301610140880152611862565b90838203602085015261174f565b0390a180f35b908092939594500160407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8383030112610b7457610ab2600483016115d3565b9060248301359067ffffffffffffffff8211610b70576004610ad79286950101611731565b908273ffffffffffffffffffffffffffffffffffffffff60208451940192165af192610b016117e3565b9315610b1257929091845f806108f8565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f696e6e65722063616c6c206661696c65640000000000000000000000000000006044820152fd5b8480fd5b8280fd5b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b503461017957807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795773ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163003610c5f5760206040517f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8152f35b807fe07c8dba0000000000000000000000000000000000000000000000000000000060049252fd5b5060407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261017957610cba61158d565b9060243567ffffffffffffffff811161017757610cdb903690600401611731565b73ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803014908115610f78575b50610f5057610d2a6119d7565b73ffffffffffffffffffffffffffffffffffffffff831690604051937f52d1902d000000000000000000000000000000000000000000000000000000008552602085600481865afa80958596610f1c575b50610dac57602484847f4c9c8ce3000000000000000000000000000000000000000000000000000000008252600452fd5b9091847f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc8103610ef15750813b15610ec657807fffffffffffffffffffffffff00000000000000000000000000000000000000007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5416177f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b8480a28151839015610e935780836020610e8f95519101845af4610e896117e3565b91611c07565b5080f35b50505034610e9e5780f35b807fb398979f0000000000000000000000000000000000000000000000000000000060049252fd5b7f4c9c8ce3000000000000000000000000000000000000000000000000000000008452600452602483fd5b7faa1d49a4000000000000000000000000000000000000000000000000000000008552600452602484fd5b9095506020813d602011610f48575b81610f3860209383611653565b81010312610b705751945f610d7b565b3d9150610f2b565b6004827fe07c8dba000000000000000000000000000000000000000000000000000000008152fd5b905073ffffffffffffffffffffffffffffffffffffffff7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc541614155f610d1d565b50346101795760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101795780610ff361158d565b610ffb6119d7565b73ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156107425773ffffffffffffffffffffffffffffffffffffffff604484928360405195869485937f205c287800000000000000000000000000000000000000000000000000000000855216600484015260243560248401525af180156110ad5761109c5750f35b816110a691611653565b6101795780f35b6040513d84823e3d90fd5b505f7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605773ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016803b15610260575f602491604051928380927fb760faf900000000000000000000000000000000000000000000000000000000825230600483015234905af1801561117257611166575080f35b61001a91505f90611653565b6040513d5f823e3d90fd5b346102605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605760043567ffffffffffffffff8111610260576111cc903690600401611622565b6111d46118f8565b5f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301905b8281101561001a578060051b8401358281121561026057840180359073ffffffffffffffffffffffffffffffffffffffff82168203610260575f9181611254611249604086950183611792565b91905a9236916116fb565b926020808551950193013591f11561126e576001016111fc565b6001830361127e5761073a6119bd565b6112866119bd565b906112c96040519283927f5a154675000000000000000000000000000000000000000000000000000000008452600484015260406024840152604483019061174f565b0390fd5b346102605760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605760043567ffffffffffffffff8111610260576101207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc82360301126102605760443573ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001633036113b55761138d602092602435906004016118a0565b908061139d575b50604051908152f35b5f80808093335af1506113ae6117e3565b5082611394565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e74000000006044820152fd5b346102605760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102605761144a61158d565b506114536115b0565b5060643567ffffffffffffffff8111610260576114749036906004016115f4565b505060206040517f150b7a02000000000000000000000000000000000000000000000000000000008152f35b346102605760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261026057600435907fffffffff00000000000000000000000000000000000000000000000000000000821680920361026057817f150b7a020000000000000000000000000000000000000000000000000000000060209314908115611563575b8115611539575b5015158152f35b7f01ffc9a70000000000000000000000000000000000000000000000000000000091501483611532565b7f4e2312e0000000000000000000000000000000000000000000000000000000008114915061152b565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361026057565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361026057565b359073ffffffffffffffffffffffffffffffffffffffff8216820361026057565b9181601f840112156102605782359167ffffffffffffffff8311610260576020838186019501011161026057565b9181601f840112156102605782359167ffffffffffffffff8311610260576020808501948460051b01011161026057565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761169457604052565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b67ffffffffffffffff811161169457601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b929192611707826116c1565b916117156040519384611653565b829481845281830111610260578281602093845f960137010152565b9080601f830112156102605781602061174c933591016116fb565b90565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602080948051918291828752018686015e5f8582860101520116010190565b9035907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe181360301821215610260570180359067ffffffffffffffff82116102605760200191813603831361026057565b3d1561180d573d906117f4826116c1565b916118026040519384611653565b82523d5f602084013e565b606090565b90357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18236030181121561026057016020813591019167ffffffffffffffff821161026057813603831361026057565b601f82602094937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe093818652868601375f8582860101520116010190565b906118e96118e073ffffffffffffffffffffffffffffffffffffffff926118da6118d3855f541696610100810190611792565b36916116fb565b90611a66565b90929192611aa0565b16036118f3575f90565b600190565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163314801561199d575b1561193f57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602060248201527f6163636f756e743a206e6f74204f776e6572206f7220456e747279506f696e746044820152fd5b5073ffffffffffffffffffffffffffffffffffffffff5f54163314611938565b3d604051906020818301016040528082525f602083013e90565b73ffffffffffffffffffffffffffffffffffffffff5f541633148015611a5d575b156119ff57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f6f6e6c79206f776e6572000000000000000000000000000000000000000000006044820152fd5b503033146119f8565b8151919060418303611a9657611a8f9250602082015190606060408401519301515f1a90611b78565b9192909190565b50505f9160029190565b6004811015611b4b5780611ab2575050565b60018103611ae2577ff645eedf000000000000000000000000000000000000000000000000000000005f5260045ffd5b60028103611b1657507ffce698f7000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b600314611b205750565b7fd78bce0c000000000000000000000000000000000000000000000000000000005f5260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b91907f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08411611bfc579160209360809260ff5f9560405194855216868401526040830152606082015282805260015afa15611172575f5173ffffffffffffffffffffffffffffffffffffffff811615611bf257905f905f90565b505f906001905f90565b5050505f9160039190565b90611c445750805115611c1c57805190602001fd5b7fd6bda275000000000000000000000000000000000000000000000000000000005f5260045ffd5b81511580611c97575b611c55575090565b73ffffffffffffffffffffffffffffffffffffffff907f9996b315000000000000000000000000000000000000000000000000000000005f521660045260245ffd5b50803b15611c4d56fea26469706673582212201d4154fd6bf0a5a1fdd106eed14c503b7ccff986efd0235a443a6eee9465299a64736f6c634300081c0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type TestExecAccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: TestExecAccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class TestExecAccount__factory extends ContractFactory {
  constructor(...args: TestExecAccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<TestExecAccount> {
    return super.deploy(
      anEntryPoint,
      overrides || {}
    ) as Promise<TestExecAccount>;
  }
  override getDeployTransaction(
    anEntryPoint: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(anEntryPoint, overrides || {});
  }
  override attach(address: string): TestExecAccount {
    return super.attach(address) as TestExecAccount;
  }
  override connect(signer: Signer): TestExecAccount__factory {
    return super.connect(signer) as TestExecAccount__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestExecAccountInterface {
    return new utils.Interface(_abi) as TestExecAccountInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestExecAccount {
    return new Contract(address, _abi, signerOrProvider) as TestExecAccount;
  }
}
